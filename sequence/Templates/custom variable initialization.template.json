{
  "$id": "1",
  "$type": "NINA.Sequencer.Container.SequentialContainer, NINA.Sequencer",
  "Strategy": {
    "$type": "NINA.Sequencer.Container.ExecutionStrategy.SequentialStrategy, NINA.Sequencer"
  },
  "Name": "custom variable initialization",
  "Conditions": {
    "$id": "2",
    "$type": "System.Collections.ObjectModel.ObservableCollection`1[[NINA.Sequencer.Conditions.ISequenceCondition, NINA.Sequencer]], System.ObjectModel",
    "$values": []
  },
  "IsExpanded": true,
  "Items": {
    "$id": "3",
    "$type": "System.Collections.ObjectModel.ObservableCollection`1[[NINA.Sequencer.SequenceItem.ISequenceItem, NINA.Sequencer]], System.ObjectModel",
    "$values": [
      {
        "$id": "4",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- change observatory to the name for your observatory (not matter how transient it is)",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "5",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "6",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "\"***default observatory name ***\"",
          "Type": "Any"
        },
        "Variable": "observatory",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "7",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- set max_cycles to the number of nights you want the sequence to run continuously ----------",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "8",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "9",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "1",
          "Type": "Any"
        },
        "Variable": "max_cycles",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "10",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- set the desired camera temperature",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "11",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "12",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "-5",
          "Type": "Any"
        },
        "Variable": "desired_camera_temperature",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "13",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- bb is for broadband, nb is for narrowband, set to 1 to get the specifed calibration frames or 0 to skip when darks are requested",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "14",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- define darks and biases desired. Supply an entry for each array in a new index for the lengths/gains/offsets/binning you want.",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "15",
        "$type": "WhenPlugin.When.PutArray, WhenPlugin",
        "NameExpr": {
          "$id": "16",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "'dark_length_array'",
          "Type": "Any"
        },
        "IExpr": {
          "$id": "17",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "VExpr": {
          "$id": "18",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "Identifier": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "19",
        "$type": "WhenPlugin.When.PutArray, WhenPlugin",
        "NameExpr": {
          "$id": "20",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "'dark_gain_array'",
          "Type": "Any"
        },
        "IExpr": {
          "$id": "21",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "VExpr": {
          "$id": "22",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "Identifier": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "23",
        "$type": "WhenPlugin.When.PutArray, WhenPlugin",
        "NameExpr": {
          "$id": "24",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "'dark_offset_array'",
          "Type": "Any"
        },
        "IExpr": {
          "$id": "25",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "VExpr": {
          "$id": "26",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "Identifier": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "27",
        "$type": "WhenPlugin.When.PutArray, WhenPlugin",
        "NameExpr": {
          "$id": "28",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "'dark_binning_array'",
          "Type": "Any"
        },
        "IExpr": {
          "$id": "29",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "VExpr": {
          "$id": "30",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "1",
          "Type": "Any"
        },
        "Identifier": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "31",
        "$type": "WhenPlugin.When.PutArray, WhenPlugin",
        "NameExpr": {
          "$id": "32",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "'dark_length_array'",
          "Type": "Any"
        },
        "IExpr": {
          "$id": "33",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "1",
          "Type": "Any"
        },
        "VExpr": {
          "$id": "34",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "600",
          "Type": "Any"
        },
        "Identifier": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "35",
        "$type": "WhenPlugin.When.PutArray, WhenPlugin",
        "NameExpr": {
          "$id": "36",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "'dark_gain_array'",
          "Type": "Any"
        },
        "IExpr": {
          "$id": "37",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "1",
          "Type": "Any"
        },
        "VExpr": {
          "$id": "38",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "Identifier": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "39",
        "$type": "WhenPlugin.When.PutArray, WhenPlugin",
        "NameExpr": {
          "$id": "40",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "'dark_offset_array'",
          "Type": "Any"
        },
        "IExpr": {
          "$id": "41",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "1",
          "Type": "Any"
        },
        "VExpr": {
          "$id": "42",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "Identifier": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "43",
        "$type": "WhenPlugin.When.PutArray, WhenPlugin",
        "NameExpr": {
          "$id": "44",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "'dark_binning_array'",
          "Type": "Any"
        },
        "IExpr": {
          "$id": "45",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "1",
          "Type": "Any"
        },
        "VExpr": {
          "$id": "46",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "1",
          "Type": "Any"
        },
        "Identifier": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "47",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- set to true for any flat darks you want. They must have been previously trained with flat wizard.",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "48",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "49",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_l1_flat_darks",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "50",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "51",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_r1_flat_darks",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "52",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "53",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_g1_flat_darks",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "54",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "55",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_b1_flat_darks",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "56",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "57",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_r2_flat_darks",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "58",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "59",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_g2_flat_darks",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "60",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "61",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_b2_flat_darks",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "62",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "63",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_h1_flat_darks",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "64",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "65",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_s1_flat_darks",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "66",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "67",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_o1_flat_darks",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "68",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- Set the gain to use for each subexposure ttype - you can use 0 if your camera does not support setting gain",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "69",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "70",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "Variable": "bb_bin1_gain",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "71",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "72",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "Variable": "bb_bin2_gain",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "73",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "74",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "2750",
          "Type": "Any"
        },
        "Variable": "nb_bin1_gain",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "75",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- Set the offset to use for each subexpousre type - you can use 0 if your camera does not support setting offset",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "76",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "77",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "Variable": "bb_bin1_offset",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "78",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "79",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "Variable": "bb_bin2_offset",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "80",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "81",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "0",
          "Type": "Any"
        },
        "Variable": "nb_bin1_offset",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "82",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- Set to 1 to indicate when it is ok to get darks or flats; use 0 to disallow that time period",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "83",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "84",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_darks_when_unsafe",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "85",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "86",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_darks_when_daytime",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "87",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "88",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_flats_when_daytime",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "89",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "90",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "get_flats_when_unsafe",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "91",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- set to 1 if your system has a flat panel cover that can rais or lower; 0 if it doe snot",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "92",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "93",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "False",
          "Type": "Any"
        },
        "Variable": "has_flat_panel_cover",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "94",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- set to 1 if you are in a shared observatory where you do not control the roof; 0 if you do control the roof",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "95",
        "$type": "WhenPlugin.When.ResetVariable, WhenPlugin",
        "Expr": {
          "$id": "96",
          "$type": "WhenPlugin.When.Expr, WhenPlugin",
          "Expression": "True",
          "Type": "Any"
        },
        "Variable": "in_shared_observatory",
        "CValueExpr": null,
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      },
      {
        "$id": "97",
        "$type": "NINA.Sequencer.SequenceItem.Utility.Annotation, NINA.Sequencer",
        "Text": "---------- You can set the variables desired_bias_count and desired_dark_count here if you want to override the default values set in the main sequence.",
        "Parent": {
          "$ref": "1"
        },
        "ErrorBehavior": 0,
        "Attempts": 1
      }
    ]
  },
  "Triggers": {
    "$id": "98",
    "$type": "System.Collections.ObjectModel.ObservableCollection`1[[NINA.Sequencer.Trigger.ISequenceTrigger, NINA.Sequencer]], System.ObjectModel",
    "$values": []
  },
  "Parent": null,
  "ErrorBehavior": 0,
  "Attempts": 1
}